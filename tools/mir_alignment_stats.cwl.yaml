#!/usr/bin/cwl-runner

description: |
  Annotated read information is collated into summary reports by alignment_stats.pl.

  Usage: cwl-runner <this-file-path> --sam_path <sam_path> --adapter_path <adapter_path>

requirements:
  - import: node-engine.cwl
  - import: envvar-global.cwl
  - class: DockerRequirement
    dockerPull: quay.io/dmiller15/mir_profiler

class: CommandLineTool

inputs:
  - id: "#sam_path"
    type: File
    inputBinding:
      prefix: -s
  - id: "#adapter_path"
    type: File
    inputBinding:
      prefix: -a

outputs:
  - id: "#alignment_stats"
    type: File
    description: "CSV file with alignment stats"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "alignment_stats.csv";
          }
  - id: "#mirna_species"
    type: File
    description: "TXT file with information on miRNA species"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/mirna_species.txt";
          }
  - id: "#crossmapped"
    type: File
    description: "Crossmapped reads"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/crossmapped.txt";
          }
  - id: "#filtered_taglen"
    type: File
    description: "Filtered taglenths"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/filtered_taglengths.csv";
          }
  - id: "#softclip_taglen"
    type: File
    description: "CSV file with softclip taglenths"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/softclip_taglengths.csv";
          }
  - id: "#chastity_taglen"
    type: File
    description: "CSV file with chastity taglenths"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/chastity_taglengths.csv";
          }
  - id: "#isoforms"
    type: File
    description: "miRNA isoforms"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/isoforms.txt";
          }
  - id: "#3_UTR"
    type: File
    description: "3 UTR feature"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/3_UTR.txt";
          }
  - id: "#5_UTR"
    type: File
    description: "5 UTR feature"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/5_UTR.txt";
          }
  - id: "#Coding_exon"
    type: File
    description: "Coding exon feature"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/Coding_Exon.txt";
          }
  - id: "#Intron"
    type: File
    description: "Intron features"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/Intron.txt";
          }
  - id: "mirna"
    type: File
    description: "TXT file with mirna information"
    outputBidning:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/miRNA.txt";
          }
  - id: "#snoRNA"
    type: File
    description: "TXT file with snoRNA information"
    outputBinding:
      glob:
        engine: node-engine.cwl
        script: |
          {
          return $job + "features/snoRNA.txt";
          }
  - id: "#bed_file"
    descripiton: "BED files for all chromosomes & strands"
    type:
      type: array
      items: File
    glob: /job/feature/bed/*.txt.gz

baseCommand: ["python3", "/home/ubuntu/bin/mirna-profiler/py-tools/mir_alignment_stats.py"]
