#!/usr/bin/env cwl-runner

description: |
  The tcga.pl script resolves crossmapped and multimapped reads then formats
  resulting expression files to the format defined for TCGA. Can be run on a
  desktop computer. 
  Needs miRBase access.

  Usage: cwl-runner <this-file-path> XXXX
  Options:
    --db_connect	XXXX
    --species_code	XXXX 
    --sam_path 		XXXX
    --mirna_species 	XXXX
    --crossmapped 	XXXX
    --isoforms 		XXXX
    --uuid		XXXX
    --barcode		XXXX
    --db_cred_s3url	XXXX
    --s3cfg_path	XXXX
    

requirements:
  - class: DockerRequirement
    dockerPull: quay.io/dmiller15/mir-profiler

class: CommandLineTool

inputs:
  - id: "#db_connect"
    type: File 
    inputBinding:
      prefix: -w
      
  - id: "#genome_version"
    type: string
    inputBinding:
      prefix: -g

  - id: "#species_code"
    type: string
    inputBinding:
      prefix: -e

  - id: "#sam_path"
    type: File
    inputBinding:
      prefix: -s

  - id: "#mirna_species"
    type: File
    inputBinding:
      prefix: -p

  - id: "#crossmapped"
    type: File
    inputBinding:
      prefix: -x

  - id: "#isoforms"
    type: File
    inputBinding:
      prefix: -i

  - id: "#uuid"
    type: string
    inputBinding:
      prefix: -u

  - id: "#barcode"
    type: string
    inputBinding:
      prefix: -r

  - id: "#db_cred_s3url"
    type: string
    inputBinding:
      prefix: -y

  - id: "#s3cfg_path"
    type: File
    inputBinding:
      prefix: -z

outputs:
  - id: "#isoform_quant"
    type: File
    description: "TCGA quantification of the isoform data"
    outputBinding:
      glob: ./tcga/isoforms*

  - id: "#mirna_quant"
    type: File
    description: "TCGA quantification of the mirna data"
    outputBinding:
      glob: ./tcga/mirnas*

  - id: "#tcga_log"
    type: File
    description: "Log file for TCGA run"
    outputBinding:
      glob: ./*.log

baseCommand: ["/home/ubuntu/.virtualenvs/p3/bin/python", "/home/ubuntu/bin/mirna-profiler/py-tools/mir_tcga.py"]
